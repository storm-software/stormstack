datasource db {
    provider = "mongodb"
    url      = env("CONTACT_DATABASE_URL") // uses connection pooling
    // directUrl         = env("CONTACT_DATABASE_DIRECT_URL") // uses a direct connection
    // shadowDatabaseUrl = env("CONTACT_DATABASE_DIRECT_URL") // used for migrations
}

generator client {
    provider = "prisma-client-js"
    // Generate into custom location because this repo has multiple prisma schemas
    output   = "../../../../../../../node_modules/.prisma/client/contact"
}

generator pothos {
    provider     = "prisma-pothos-types"
    // Match client output location from above
    clientOutput = "@prisma/client/contact"
    prismaUtils  = true
    output       = "../src/__generated__/types.d.ts"
}

generator pothosCrud {
    provider            = "prisma-generator-pothos-codegen"
    generatorConfigPath = "../codegen.config.js"
}

//generator zod {
//    provider                         = "zod-prisma-types"
//    output                           = "../src/__generated__/zod"
//    useMultipleFiles                 = false // default is false
//    writeBarrelFiles                 = true // default is true
//    createInputTypes                 = true // default is true
//    createModelTypes                 = false // default is true
//    addInputTypeValidation           = true // default is true
//    addIncludeType                   = false // default is true
//    addSelectType                    = false // default is true
//    validateWhereUniqueInput         = true // default is false
//   createOptionalDefaultValuesTypes = true // default is false
//    createRelationValuesTypes        = false // default is false
//    createPartialTypes               = false // default is false
//    useDefaultValidators             = true // default is true
//    coerceDate                       = true // default is true
//    writeNullishInModelTypes         = true // default is false
//    prismaClientPath                 = "@prisma/client/contact"
//}

enum ContactReason {
    Business
    Question
    Other
    Project
    Interest
    Subscription
}

enum AttachmentStatus {
    Pending
    Approved
    Rejected
    Removed
}

/// The data fields related to a specific Contact request instance
model Contact {
    /// @Pothos.omit(create) The unique identifier for the Contact
    id String @id @default(auto()) @map("_id") @db.ObjectId

    /// @Pothos.omit(create, update) A timestamp of when the Contact was created
    createdOn DateTime @default(now())

    /// @Pothos.omit(create, update) The user who created the Contact
    createdBy String @db.ObjectId

    /// @Pothos.omit(create, update) A timestamp of when the Contact was last updated
    updatedOn DateTime? @updatedAt

    /// @Pothos.omit(create, update) The user who last updated the Contact
    updatedBy String? @db.ObjectId

    /// The reason of the Contact
    reason ContactReason @default(Other)

    /// The details of the Contact
    details String?

    /// The provided email to respond back to the Contact request
    email String

    /// The provided phone number to respond back to the Contact request
    phoneNumber String?

    /// The provided first name of the Contact
    firstName String?

    /// The provided first name of the Contact
    lastName String?

    /// The provided address of the Contact
    addressLine1 String?

    /// The provided address of the Contact
    addressLine2 String?

    /// The provided postal code of the Contact
    postalCode String?

    /// The provided city of the Contact
    city String?

    /// The provided state of the Contact
    state String?

    /// The provided country code of the Contact
    countryCode String?

    /// The provided title of the Contact
    title String?

    /// The provided company name of the Contact
    companyName String?

    /// The provided URL of the Contact
    url String?

    /// A list of file attachments included by the Contact
    attachments ContactAttachment[]
}

/// A file attachment included by a Contact
model ContactAttachment {
    /// @Pothos.omit(create) The unique identifier for the ContactAttachment
    id String @id @default(auto()) @map("_id") @db.ObjectId

    /// @Pothos.omit(create, update) A timestamp of when the ContactAttachment was created
    createdOn DateTime @default(now())

    /// @Pothos.omit(create, update) The user who created the ContactAttachment
    createdBy String @db.ObjectId

    /// @Pothos.omit(create, update) A timestamp of when the ContactAttachment was last updated
    updatedOn DateTime? @updatedAt

    /// @Pothos.omit(create, update) The user who last updated the ContactAttachment
    updatedBy String? @db.ObjectId

    /// The name of the file
    name String

    /// The path of the file
    path String

    /// The status of the file
    status AttachmentStatus @default(Pending)

    /// The Contact the attachment belongs to
    contact Contact @relation(fields: [contactId], references: [id])

    /// The Contact (Id) the attachment belongs to
    contactId String @db.ObjectId

    @@unique([name, path])
}
