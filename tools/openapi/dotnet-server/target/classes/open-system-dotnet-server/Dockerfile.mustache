#See https://aka.ms/containerfastmode to understand how Visual Studio uses this Dockerfile to build your images for faster debugging.

# Container we use for final publish
FROM mcr.microsoft.com/dotnet/aspnet:{{aspnetCoreVersion}} AS base
WORKDIR /app
EXPOSE 80
EXPOSE 443

FROM node:latest AS node_base

# Build container
FROM mcr.microsoft.com/dotnet/sdk:{{aspnetCoreVersion}} AS setup
COPY --from=node_base . .

WORKDIR /src

# Install app dependencies
ENV NX_DAEMON=false

COPY package.json /src
COPY package-lock.json /src
RUN npm install --legacy-peer-deps

# Copy the code into the container
COPY . .

RUN npx nx reset
RUN npx nx run tools-executors-dotnet:build:build

# Build the API
FROM setup AS build
RUN npx nx run {{projectName}}:build:docker

# Publish it
FROM build AS publish
RUN npx nx run {{projectName}}:publish:docker

# Make the final image for publishing
FROM base AS final
WORKDIR /app
COPY --from=publish /app/publish .
ENTRYPOINT ["dotnet", "{{packageName}}.dll"]
