// tslint:disable
/**
 * Message
 * A collection of message APIs used by the Open System repository
 *
 * The version of the OpenAPI document: 1.0
 * Contact: Patrick.Sullivan@broadridge.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
/**
 * A model for API errors inline with the [RFC 7807](https://www.rfc-editor.org/rfc/rfc7807) specification.
 * @export
 * @interface SharedApiSpecProblemDetailsDto
 */
export interface SharedApiSpecProblemDetailsDto  {
    /**
     * A URI reference [RFC3986](https://www.rfc-editor.org/rfc/rfc3986) that identifies the problem type. This specification encourages that, when dereferenced, it provide human-readable documentation for the problem type (e.g., using HTML [W3C.REC-html5-20141028](https://www.rfc-editor.org/rfc/rfc7807#ref-W3C.REC-html5-20141028)). When this member is not present, its value is assumed to be `about:blank`.
     * @type {string}
     * @memberof SharedApiSpecProblemDetailsDto
     */
    type: string;
    /**
     * A short, human-readable summary of the problem type. It **SHOULD NOT** change from occurrence to occurrence of the pro**blem, except for purposes of localization (e.g., using proactive content negotiation; see [RFC7231, Section 3.4](https://www.rfc-editor.org/rfc/rfc7231#section-3.4)).
     * @type {string}
     * @memberof SharedApiSpecProblemDetailsDto
     */
    title?: string;
    /**
     * A human-readable explanation specific to this occurrence of the problem.
     * @type {string}
     * @memberof SharedApiSpecProblemDetailsDto
     */
    detail?: string;
    /**
     * A URI reference that identifies the specific occurrence of the problem. It may or may not yield further information if dereferenced.
     * @type {string}
     * @memberof SharedApiSpecProblemDetailsDto
     */
    instance?: string;
}

export function SharedApiSpecProblemDetailsDtoFromJSON(json: any): SharedApiSpecProblemDetailsDto {
    return {
        'type': json['type'],
        'title': !exists(json, 'title') ? undefined : json['title'],
        'detail': !exists(json, 'detail') ? undefined : json['detail'],
        'instance': !exists(json, 'instance') ? undefined : json['instance'],
    };
}

export function SharedApiSpecProblemDetailsDtoToJSON(value?: SharedApiSpecProblemDetailsDto): any {
    if (value === undefined) {
        return undefined;
    }
    return {
        'type': value.type,
        'title': value.title,
        'detail': value.detail,
        'instance': value.instance,
    };
}


