version: "3.9"

networks:
  # Network for microservices
  network-microservice:
    driver: bridge
    ipam:
      driver: default
      config:
        - subnet: 172.28.4.0/24

services:
  pgadmin:
    container_name: pgadmin
    image: dpage/pgadmin4
    restart: always
    ports:
      - "5050:80"
    networks:
      - network-microservice
    volumes:
      - pgadmin-data:/root/.pgadmin

  mailhog:
    image: mailhog/mailhog
    ports:
      - 1025:1025 # smtp server
      - 8025:8025 # web ui

  rabbitmq:
    container_name: rabbitmq
    image: rabbitmq:3-management-alpine
    hostname: rabbitmq
    restart: always
    ports:
      - "5634:5634"
      - "5672:5672"
      - "15672:15672"
    networks:
      - network-microservice

  static.cache:
    container_name: static.cache
    image: redis:alpine
    restart: on-failure
    ports:
      - "5430:5430"
    networks:
      - network-microservice

  contact.db:
    container_name: contact.db
    image: postgres
    restart: always
    ports:
      - "5434:5434"
    networks:
      - network-microservice
    volumes:
      - postgresql-data:/var/lib/postgresql/data

  contact.api:
    container_name: contact.api
    image: apis-contact:latest
    restart: unless-stopped
    hostname: contact.api
    build:
      context: .
      dockerfile: apps/apis/contact/Dockerfile
    ports:
      - "5002:5002"
    networks:
      - network-microservice

  reaction.db:
    container_name: reaction.db
    image: postgres
    restart: always
    ports:
      - "5432:5432"
    networks:
      - network-microservice
    volumes:
      - postgresql-data:/var/lib/postgresql/data

  reaction.api:
    container_name: reaction.api
    image: apis-reaction:latest
    restart: unless-stopped
    hostname: reaction.api
    build:
      context: .
      dockerfile: apps/apis/reaction/Dockerfile
    ports:
      - "5000:5000"
    networks:
      - network-microservice

  shell.web:
    container_name: shell.web
    image: web-shell:latest
    restart: unless-stopped
    build:
      context: .
      dockerfile: apps/web/shell/Dockerfile
    ports:
      - "4200:4200"
    networks:
      - network-microservice

volumes:
  postgresql-data:
  pgadmin-data:
