name: Build

on:
  push:
    branches:
      - main
  pull_request:

env:
  CI: true
  # Disable the .NET logo in the console output.
  DOTNET_NOLOGO: true
  # Disable the .NET first time experience to skip caching NuGet packages and speed up the build.
  DOTNET_SKIP_FIRST_TIME_EXPERIENCE: true
  # Disable sending .NET CLI telemetry to Microsoft.
  DOTNET_CLI_TELEMETRY_OPTOUT: true
  # Set the build number in MinVer.
  MINVERBUILDMETADATA: build.${{github.run_number}}

jobs:
  build:
    name: Build-${{matrix.os}}
    runs-on: ${{matrix.os}}
    strategy:
      matrix:
        os: [ubuntu-latest, windows-latest, macOS-latest]
    steps:
      - name: "Checkout"
        uses: actions/checkout@v3.0.2
        with:
          lfs: true
          fetch-depth: 0

      - name: "Configure git"
        run: |
          git config user.name "${GITHUB_ACTOR}"
          git config user.email "${GITHUB_ACTOR}@users.noreply.github.com"

      - name: "Install .NET Core SDK"
        uses: actions/setup-dotnet@v3.0.3

      - name: "Dotnet Tool Restore"
        run: dotnet tool restore
        shell: pwsh

      - name: "Install NPM Modules"
        uses: nrwl/nx-set-shas@v3
        run: npm npm install --legacy-peer-deps

      - name: "Build Repository Tools (Pre-Build)"
        run: npx nx run tools-executors-typescript:build:design-tokens-build
        run: npx nx run design-system-tokens:build:open-system
        run: npx nx run tools-executors-dotnet:build:build

      - name: "Build Repository Packages"
        run: npx nx affected -t build --parallel=5 --exclude=tools-asyncapi-rabbitmq,docs

#      - name: "Publish Artefacts"
#        uses: actions/upload-artifact@v3.1.0
#        with:
#          name: ${{matrix.os}}
#          path: "./Artefacts"

#if (Docker)
#  docker:
#    name: Docker-${{matrix.os}}
#    env:
#      DOCKER_IMAGE_NAME: opensystem
#if (GitHubContainerRegistry)
#      DOCKER_REGISTRY: ghcr.io
#      DOCKER_USERNAME: GITHUB-USERNAME-LOWERCASE
#      DOCKER_PASSWORD: ${{secrets.GITHUB_TOKEN}}
##elif (DockerHub)
#      DOCKER_REGISTRY: registry.hub.docker.com
#      DOCKER_USERNAME: ${{secrets.DOCKER_USERNAME}}
#      DOCKER_PASSWORD: ${{secrets.DOCKER_PASSWORD}}
#endif
#    environment:
#if (GitHubContainerRegistry)
#      name: "GitHub Container Registry"
#      url: https://github.com/GITHUB-USERNAME/GITHUB-PROJECT/pkgs/container/orleanstemplate
##elif (DockerHub)
#      name: 'Docker Hub'
#      url: https://hub.docker.com/repository/docker/DOCKER_USERNAME/orleanstemplate
#endif
#    permissions:
#      packages: write
#    runs-on: ${{matrix.os}}
#    strategy:
#      matrix:
#        os: [ubuntu-latest]
#    steps:
#      - name: "Checkout"
#        uses: actions/checkout@v3.0.2
#        with:
#          lfs: true
#          fetch-depth: 0
#      - name: "Install .NET Core SDK"
#        uses: actions/setup-dotnet@v3.0.3
#      - name: "Dotnet Tool Restore"
#        run: dotnet tool restore
#        shell: pwsh
