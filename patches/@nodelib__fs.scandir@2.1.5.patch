diff --git a/out/adapters/fs.js b/out/adapters/fs.js
index f0fe022023e6dfd5b56c33f2bac6d2d3b180e1c5..55dc04535ef46370130d7022d9418bde4d26e2c9 100644
--- a/out/adapters/fs.js
+++ b/out/adapters/fs.js
@@ -1,7 +1,7 @@
 "use strict";
 Object.defineProperty(exports, "__esModule", { value: true });
 exports.createFileSystemAdapter = exports.FILE_SYSTEM_ADAPTER = void 0;
-const fs = require("fs");
+const fs = require("node:fs");
 exports.FILE_SYSTEM_ADAPTER = {
     lstat: fs.lstat,
     stat: fs.stat,
diff --git a/out/types/index.d.ts b/out/types/index.d.ts
index f326c5e5e41f3288779c97c777e782e5642aed1f..f5b546daaa0d5571c4401e8e385fdd354a1c8af7 100644
--- a/out/types/index.d.ts
+++ b/out/types/index.d.ts
@@ -1,20 +1,20 @@
 /// <reference types="node" />
-import type * as fs from 'fs';
+import type * as fs from "node:fs";
 export interface Entry {
-    dirent: Dirent;
-    name: string;
-    path: string;
-    stats?: Stats;
+  dirent: Dirent;
+  name: string;
+  path: string;
+  stats?: Stats;
 }
 export declare type Stats = fs.Stats;
 export declare type ErrnoException = NodeJS.ErrnoException;
 export interface Dirent {
-    isBlockDevice: () => boolean;
-    isCharacterDevice: () => boolean;
-    isDirectory: () => boolean;
-    isFIFO: () => boolean;
-    isFile: () => boolean;
-    isSocket: () => boolean;
-    isSymbolicLink: () => boolean;
-    name: string;
+  isBlockDevice: () => boolean;
+  isCharacterDevice: () => boolean;
+  isDirectory: () => boolean;
+  isFIFO: () => boolean;
+  isFile: () => boolean;
+  isSocket: () => boolean;
+  isSymbolicLink: () => boolean;
+  name: string;
 }
